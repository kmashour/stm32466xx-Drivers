/***********************************************************************************************/
/**********************************************************************************************/
/****************************** Author: Karim magdy*******************************************/
/****************************** LAYER : LIB *************************************************/
/****************************** SWC   : STM32F401xx device**********************************/
/****************************** version:1.00***********************************************/
/*****************************************************************************************/
/****************************************************************************************/

/*
notes for me : 1- we only write base address like in flash and sram in case of 446 or any peripheral because
                  there are register or location based on the base address this location are far away with offset 
				  from the base address.



*/
/******************************Memories base addresses***********************************/
#define   FLASH_BASE_ADDRESS 0x08000000UL
#define   SRAM1_BASE_ADDRESS 0X2000000UL
/*CALCULATED MANUALLY ->REF MANUAL MEM ARCHITECTURE TO KNOW SIZES OF SRAM*/
#define   SRAM2_BASE_ADDRESS 0X2001C00UL
/*OR  I CAN DEAL WITH SRAM FROM SRAM1 TO SRAM2 AS A LOKSHA BLOCK KDA 3LA BA3DO*/
#define   SRAM SRAM1_BASE_ADDRESS
#define   ROM 0x1FFF0000UL
/**********************************BUS DOMAINS BASE ADDRESSES***********************************/
#define AHB1_BASE_ADDRESS_   (0x40020000UL)    
#define AHB2_BASE_ADDRESS_   (0x50000000UL)
#define AHB3_BASE_ADDRESS_   (0x60000000UL)
#define APB1_BASE_ADDRESS_   (0x40000000UL)
#define APB2_BASE_ADDRESS_   (0x40010000UL)
/***********************************AHB1 Peripheral base addresses ****************************/
#define GPIOA_BASE_ADDRESS_  (AHB1_BASE_ADDRESS_)
#define GPIOB_BASE_ADDRESS_  (GPIOA_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)
#define GPIOC_BASE_ADDRESS_	 (GPIOB_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)
#define GPIOD_BASE_ADDRESS_  (GPIOC_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)
#define GPIOE_BASE_ADDRESS_  (GPIOD_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)
#define GPIOF_BASE_ADDRESS_  (GPIOE_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)
#define GPIOG_BASE_ADDRESS_  (GPIOF_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)
#define GPIOH_BASE_ADDRESS_  (GPIOG_BASE_ADDRESS_+GPIO_ADDRESS_OFFSET)  
#define RCC_BASE_ADDRESS_    (0x40023800UL)
#define DMA1_BASE_ADDRESS_   (0x40026000UL)
#define DMA2_BASE_ADDRESS_   (0x40026400UL)

/***********************************APB1 Peripheral base addresses ****************************/
/***********************************APB2 Peripheral base addresses ****************************/

/*********************************** RCC Register definition structure ***********************/
typedef struct
{
	u38 volatile RCC_CR; /*RCC clock control register*/
	u38 volatile RCC_PLLCFGR; /*RCC pll configuration register*/
	u38 volatile RCC_CFGR;
	u38 volatile RCC_CIR;
	u38 volatile RCC_AHB1RSTR;
	u38 volatile RCC_AHB2RSTR;
	u38 volatile RCC_AHB3RSTR;
	u38 volatile Reserved;
	u38 volatile RCC_APB1RSTR;
	u38 volatile RCC_APB2RSTR;
	u38 volatile Reserved;
	u38 volatile RCC_AHB1ENR;
	u38 volatile RCC_AHB2ENR;
	u38 volatile RCC_AHB3ENR;
	u38 volatile Reserved;
	u38 volatile RCC_APB1ENR;
	u38 volatile RCC_APB2ENR;
	u38 volatile Reserved;
	u38 volatile RCC_AHB1LPENR
	u38 volatile RCC_AHB2LPENR
	u38 volatile RCC_AHB3LPENR
	u38 volatile Reserved
	u38 volatile RCC_APB1LPENR
	u38 volatile RCC_APB2LPENR
    u38 volatile Reserved
	u38 volatile Reserved
	u38 volatile RCC_BDCR
	u38 volatile RCC_CSR
}RCC_RegDef_t

/*********************************** RCC Peripheral definitions *****************************/
#define RCC       ((volatile RCC_RegDef_t*)(RCC_BASE_ADDRESS_))
/*********************************** RCC Peripheral BITS definitions ***********************/

/*********************************** GPIO Register definition structure ***********************/
/*********************************** GPIO Peripheral definitions *****************************/

/*********************************** SOME COMMON USED MACROS *******************************/

/*DAH BADL MA 2A3OD KOL SHOWYA ASHOF KOL GPIO ELBASE ADDRESS BETA3O KAM TALMA WRA BA3D HAGM3 3LA GPIOA ELFAR2 WE 5LAS KDA*/
#define GPIO_ADDRESS_OFFSET (0x400UL)      
